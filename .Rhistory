tabletidy(., condensed)
}
lapply(1:pages, getpage) %>%
do.call(rbind,.) %>%
tabletidy(., condensed)
}
}
get_authorities()
get_authorities() %>% dplyr::filter(grepl("Birmingham", Name))
get_establishments(la = 374)
get_establishments(la = 374, condensed = FALSE)
#' # Find out the code for Birmingham
#' get_authorities() %>%
#'   filter(grepl("Birmingham", name))
#' # Perform establishment search
#' get_establishments(name = "Pret", la = 374)
#' }
#'
#'
#' @export
#'
get_establishments <- function(name = NULL, la = NULL, type = NULL, condensed = TRUE) {
query <- paste0("api.ratings.food.gov.uk/Establishments?name=",name,"&businessTypeId=",type,"&localAuthorityId=",la)
pages <- getpages(query)
if(pages == 0) {
return("No results")
} else if(pages == 1) {
httr::GET(query, httr::add_headers('x-api-version' = 2)) %>%
httr::content("text") %>%
jsonlite::fromJSON() %>%
.$establishments %>%
jsonlite::flatten() %>%
as_tibble() %>%
tabletidy(., condensed)
} else if(pages > 1) {
getpage <- function(n) {
url <- paste0(query,"&pageNumber=",n)
httr::GET(url, httr::add_headers('x-api-version' = 2)) %>%
httr::content("text") %>%
jsonlite::fromJSON() %>%
.$establishments %>%
jsonlite::flatten() %>%
as_tibble()
}
lapply(1:pages, getpage) %>%
do.call(rbind,.) %>%
tabletidy(., condensed)
}
}
get_establishments(la = 374)
document()
devtools::document()
devtools::check()
build()
devtools::build()
devtools::install()
library(fhrsdata)
get_establishments(la = 197, type = 1)
document()
library(devtools)
document()
check()
build()
install()
library(fhrsdata)
get_establishments(la = 197, type = 1)
get_establishments(la = 197, name = "pret")
get_establishments(name = "pret")
get_establishments(name = "red lion")
getquery <- function(name = NULL, la = NULL, type = NULL, condensed = TRUE) {
paste0("api.ratings.food.gov.uk/Establishments?name=",name,"&businessTypeId=",type,"&localAuthorityId=",la)
}
getquery()
getquery(name = pret)
getquery(name = "red lion")
getquery <- function(name = NULL, la = NULL, type = NULL, condensed = TRUE) {
name <- gsub(" ", "%20", name)
paste0("api.ratings.food.gov.uk/Establishments?name=",name,"&businessTypeId=",type,"&localAuthorityId=",la)
}
getquery(name = "red lion")
getquery("red lion")
library(devtools)
?gsub
build()
install()
library(fhrsdata)
get_establishments("red lion")
get_establishments("pret a manger")
get_establishments("pret a manger") %>% View()
get_establishments("pret") %>% View()
get_establishments(name = "red lion")
library(dplyr)
get_establishments("red lion") %>% count(BusinessType)
get_business_types()
get_establishments(name = "red lion", type = 7843)
get_establishments(name = "red lion", type = 7843) %>%
count(LocalAuthorityName) %>%
arrange(desc(n)) %>%
head()
get_authorities(country = "Wales")
get_establishments(name="red lion", type = 7843, la = 349)
devtools::build_vignettes()
devtools::build_vignettes()
library(fhrsdata)
get_authorities() %>%
filter(Name == "Powys")
get_establishments(name="red lion", type = 7843, la = 349, condensed = FALSE)
document()
library(devtools)
document()
build_vignettes()
check()
build()
vignette(package = "fhrsdata")
browseVignettes("fhrsdata")
browseVignettes("fhrsdata")
document()
build_vignettes()
browseVignettes("fhrsdata")
devtools::install_github("helen-food/fhrsdata", quiet = TRUE)
library(fhrsdata)
browseVignettes("fhrsdata")
devtools::install_github("helen-food/fhrsdata", build_vignettes = TRUE)
library(fhrsdata)
browseVignettes("fhrsdata")
browseVignettes("fhrsdata", build_opts = c("--no-resave-data", "--no-manual"))
devtools::install_github("helen-food/fhrsdata", build_opts = c("--no-resave-data", "--no-manual"))
browseVignettes("fhrsdata")
devtools::install_github("helen-food/fhrsdata", build_opts = c("--no-resave-data", "--no-manual"), build_vignettes = TRUE)
devtools::install_github("helen-food/fhrsdata", build_opts = c("--no-resave-data", "--no-manual"), force = TRUE)
devtools::check()
library(fhrsdata)
install()
devtools::install()
library(fhrsdata)
?get_establishments
get_business_types()
get_establishments(type = 1, la = 197)
library(dplyr)
get_authorities() %>% filter(grepl("Aberdeen", Name))
get_establishments(name = "guiseppe")
get_establishments(name = "amore")
get_establishments(name = "amore", type = 1)
library(fhrsdata)
get_establishments(name = "yagaflob")
get_establishments("greggs")
get_establishments(name = "greggs", condensed = FALSE)
get_estab2 <- function(name = NULL, la = NULL, type = NULL, condensed = TRUE) {
#name <- gsub(" ", "%20", name)
query <- paste0("api.ratings.food.gov.uk/Establishments?name=",name,"&businessTypeId=",type,"&localAuthorityId=",la)
pages <- getpages(query)
if(pages == 0) {
return("No results")
} else if(pages == 1) {
httr::GET(query, httr::add_headers('x-api-version' = 2)) %>%
httr::content("text") %>%
jsonlite::fromJSON() %>%
.$establishments %>%
jsonlite::flatten() %>%
tibble::as_tibble() %>%
tabletidy(., condensed)
} else if(pages > 1) {
getpage <- function(n) {
url <- paste0(query,"&pageNumber=",n)
httr::GET(url, httr::add_headers('x-api-version' = 2)) %>%
httr::content("text") %>%
jsonlite::fromJSON() %>%
.$establishments %>%
jsonlite::flatten() %>%
tibble::as_tibble()
}
lapply(1:pages, getpage) %>%
do.call(rbind,.) %>%
tabletidy(., condensed)
}
}
get_estab2("red lion")
getpages <- function(query) {
getpages <- httr::GET(query, httr::add_headers('x-api-version' = 2))
httr::content(getpages, "text") %>%
jsonlite::fromJSON() %>%
.$meta %>%
.$totalPages
}
tabletidy <- function(table, condensed = TRUE) {
if(condensed == FALSE) {
return(table)
} else {
table %>%
dplyr::select(FHRSID, BusinessName, BusinessType, AddressLine1:PostCode,
RatingValue, RatingDate, LocalAuthorityName, SchemeType,
lat = geocode.latitude, long = geocode.longitude)
}
}
get_estab2("red lion")
get_establishments("red lion")
library(testthat)
expect_error(get_estab2("red lion"))
?httr::GET
expect_error(get_estab2("red lion"), "parse error")
expect_error(get_estab2("red lion"), "giraffe")
expect_error(get_estab2("red lion"), "encoding")
expect_error(get_estab2("red lion"), "parse")
expect_equal("apple", "apple")
expect_equal("apple", "orange")
expect_equal(nonexistent, "No results")
nonexistent <- get_establishments(name = "yagaflob")
expect_equal(nonexistent, "No results")
expect_equal(nonexistent, "No result")
expect_equal(nonexistent, "No results")
shouldwork <- get_establishments(name = "greggs")
expect_is(shouldwork, 'tibble')
is_tibble(shouldwork)
tibble::is_tibble(shouldwork)
expect_is(shouldwork, tibble::is_tibble())
expect_is(shouldwork, tibble::is_tibble(shouldwork))
expect_is(tibble::is_tibble(shouldwork))
expect_true(tibble::is_tibble(shouldwork))
expect_gte(nrow(shouldwork), 1)
expect_gte(nrow(shouldwork), 2000)
expect_equal(ncol(shouldwork), 14)
expect_equal(ncol(shouldwork), 15)
expect_equal(ncol(shouldwork), 14)
shouldwork_large <- get_establishments(name = "greggs", condensed = FALSE)
expect_equal(ncol(shouldwork_large), 36)
shouldwork
names(shouldwork)
library(fhrsdata)
get_establishments("mcdonald")
get_establishments("greggs")
View(.Last.value)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
get_establishment("greggs")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(fhrsdata)
get_establishment("greggs")
get_establishments("greggs")
get_business_types()
get_establishments(type = 7)
get_establishments(type = 7, condensed = FALSE)
?get_establishments
get_business_types()
get_business_types() %>%
filter(BusinessTypeName == "Restaurant/Cafe/Canteen")
get_authorities()
get_establishments(type = 7838, la = 334)
get_business_types()
get_establishments(type = 7846, la = 334)
library(ggmap)
get_googlemap(`anglesey`)
?get_googlemap
get_googlemap("anglesey")
getbb("anglesey")
library(osmdata)
getbb("anglesey")
angmap <- getbb("anglesey")
getbb("York") %>%
opq() %>%
add_osm_feature("amenity", "pub") %>%
osmdata_sf()
pubs <- getbb("York") %>%
opq() %>%
add_osm_feature("amenity", "pub") %>%
osmdata_sf()
pubs$osm_points
pubs$osm_points %>% as_tibble()
library(tidyverse)
pubs$osm_points %>% as_tibble()
pubs$osm_points %>% as_tibble() %>% select(geometry)
pubs$osm_points %>% as_tibble() %>% select(geometry) %>% unnest()
angmobile <- get_establishments(type = 7846, la = 334)
angmobile
angmobile %>%
select(name = BusinessName, lat, long)
angmobile %>%
select(name = BusinessName, lat, long) %>%
drop_na()
angmobile %>%
select(name = BusinessName, lat, long) %>%
drop_na() %>%
mutate(geometry = list(lat, long))
angmobile %>%
select(name = BusinessName, lat, long) %>%
drop_na() %>%
mutate(geometry = as.list(lat, long))
angpoints <- angmobile %>%
select(name = BusinessName, lat, long) %>%
drop_na() %>%
mutate(geometry = as.list(lat, long))
ggmap(angmap) +
geom_sf(data = angpoints,
inherit.aes = FALSE)
angmap <- getbb("anglesey")
ggmap(angmap) +
geom_sf(data = angpoints,
inherit.aes = FALSE)
?get_map
angmap <- get_map(getbb("anglesey"), maptype = "toner-background")
ggmap(angmap) +
geom_sf(data = angpoints,
inherit.aes = FALSE)
?geom_sf
angmobile %>%
select(name = BusinessName, lat, long) %>%
drop_na() %>%
mutate(geometry = as.list(lat, long)) %>%
as.data.frame()
angmobile %>%
select(name = BusinessName, lat, long) %>%
drop_na() %>%
mutate(geometry = as.list(lat, long)) %>%
select(-lat, -long) %>%
as.data.frame()
angmobile %>%
select(name = BusinessName, lat, long) %>%
drop_na() %>%
as.data.frame()
angpoints
angpoints[,2]
data.frame(name = angpoints[,1], geometry = list(angpoints[,2], angpoints[,3]))
data.frame(name = angpoints[,1], geometry = I(list(angpoints[,2], angpoints[,3])))
list(angpoints[,2], angpoints[,3]))
list(angpoints[,2], angpoints[,3])
plot(angmap)
point(angmobile$lat, ang)
points(angmobile$long, angmobile$lat)
?getbb
get_authorities()
get_authorities() %>% filter(Name == York)
get_authorities() %>% filter(Name == "York")
get_business_types()
yorkmobile <- get_establishments(type = 7846, la = 406)
yorkmobile
yorkmap <- get_map(getbb("York"), maptype = "toner-background")
yorkmap
ggmap(yorkmap)
plot(yorkmap)
yorkmobile
points(yorkmobile$long, yorkmobile$lat)
get_business_types()
get_establishments(name = "red lion", type = 7843)
get_establishments(name = "red lion", type = 7843) %>% count(LocalAuthorityName)
get_establishments(name = "red lion", type = 7843) %>%
count(LocalAuthorityName) %>%
arrange(desc(n)) %>%
ggplot(aes(n)) + geom_col() + coord_flip()
get_establishments(name = "red lion", type = 7843) %>%
count(LocalAuthorityName) %>%
arrange(desc(n)) %>%
ggplot(aes(LocalAuthorityName, n)) + geom_col() + coord_flip()
get_establishments(name = "red lion", type = 7843) %>%
count(LocalAuthorityName) %>%
ggplot(aes(fct_reorder(LocalAuthorityName, n), n)) + geom_col() + coord_flip()
get_establishments(name = "red lion", type = 7843) %>%
count(LocalAuthorityName) %>%
arrange(desc(n)) %>%
slice(1:10) %>%
ggplot(aes(fct_reorder(LocalAuthorityName, n), n)) + geom_col() + coord_flip()
get_establishments(name = "red lion", type = 7843) %>%
count(LocalAuthorityName) %>%
arrange(desc(n)) %>%
slice(1:10) %>%
ggplot(aes(fct_reorder(LocalAuthorityName, n), n)) +
geom_col() +
coord_flip() +
xlab("Local Authority") + ylab("Number of Red Lion pubs")
get_establishments(name = "red lion", type = 7843) %>%
count(LocalAuthorityName) %>%
arrange(desc(n)) %>%
slice(1:10) %>%
ggplot(aes(fct_reorder(LocalAuthorityName, n), n, fill = LocalAuthorityName)) +
geom_col() +
coord_flip() +
xlab("Local Authority") + ylab("Number of Red Lion pubs") +
guides(fill = FALSE)
get_establishments(name = "red lion", type = 7843) %>%
count(LocalAuthorityName) %>%
arrange(desc(n)) %>%
slice(1:10) %>%
ggplot(aes(fct_reorder(LocalAuthorityName, n), n, fill = n)) +
geom_col() +
coord_flip() +
xlab("Local Authority") + ylab("Number of Red Lion pubs") +
guides(fill = FALSE)
library(tidyverse)
get_establishments(name = "red lion", type = 7843) %>%
count(LocalAuthorityName) %>%
arrange(desc(n)) %>%
slice(1:10) %>%
ggplot(aes(fct_reorder(LocalAuthorityName, n), n, fill = n)) +
geom_col() +
coord_flip() +
xlab("Local Authority") + ylab("Number of Red Lion pubs") +
guides(fill = FALSE)
library(tidyverse)
get_establishments(name = "red lion", type = 7843) %>%
count(LocalAuthorityName) %>%
arrange(desc(n)) %>%
slice(1:10) %>%
ggplot(aes(fct_reorder(LocalAuthorityName, n), n, fill = n)) +
geom_col() +
coord_flip() +
xlab("Local Authority") + ylab("Number of Red Lion pubs") +
guides(fill = FALSE)
xaringan:::inf_mr()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(fhrsdata)
library(tidyverse)
get_establishments(name = "red lion", type = 7843) %>%
count(LocalAuthorityName) %>%
arrange(desc(n)) %>%
slice(1:10) %>%
ggplot(aes(fct_reorder(LocalAuthorityName, n), n, fill = n)) +
geom_col() +
coord_flip() +
xlab("Local Authority") + ylab("Number of Red Lion pubs") +
guides(fill = FALSE)
library(tidyverse)
get_establishments(name = "red lion", type = 7843) %>%
count(LocalAuthorityName) %>%
arrange(desc(n)) %>%
slice(1:10) %>%
ggplot(aes(fct_reorder(LocalAuthorityName, n), n, fill = n)) +
geom_col() +
coord_flip() +
xlab("Local Authority") + ylab("Number of Red Lion pubs") +
guides(fill = FALSE)
library(tidyverse)
get_establishments(name = "red lion", type = 7843) %>%
count(LocalAuthorityName) %>%
arrange(desc(n)) %>%
slice(1:10) %>%
ggplot(aes(fct_reorder(LocalAuthorityName, n), n, fill = n)) +
geom_col() +
coord_flip() +
xlab("Local Authority") + ylab("Number of Red Lion pubs") +
guides(fill = FALSE)
library(httr)
GET("api.ratings.food.gov.uk/Authorities", httr::add_headers('x-api-version' = 2))
GET("https://api.beta.ons.gov.uk/v1/datasets/cpih01/editions/time-series/versions/5/observations?time=*&aggregate=cpih1dim1A0&geography=K02000001")
library(fhrsdata)
get_authorities()
httr::GET("api.ratings.food.gov.uk/Authorities", httr::add_headers('x-api-version' = 2))
GET("https://api.beta.ons.gov.uk/v1/datasets/cpih01/editions/time-series/versions/5/observations?time=*&aggregate=cpih1dim1A0&geography=K02000001")
httr::GET("https://api.beta.ons.gov.uk/v1/datasets/cpih01/editions/time-series/versions/5/observations?time=*&aggregate=cpih1dim1A0&geography=K02000001")
httr::GET("api.ratings.food.gov.uk/BusinessTypes", httr::add_headers('x-api-version' = 2))
install.packages(c("classInt", "DT", "foreign", "geojsonR", "installr", "knitr", "lava", "markdown", "pkgbuild", "rgeos", "servr", "tinytex", "xgboost"))
.libpaths()
libpaths()
devtools::install_github("helen-food/fhrsdata")
library(fhrsdata)
get_business_types()
get_authorities()
httr::GET("api.ratings.food.gov.uk/Authorities", httr::add_headers('x-api-version' = 2))
GET("https://api.beta.ons.gov.uk/v1/datasets/cpih01/editions/time-series/versions/5/observations?time=*&aggregate=cpih1dim1A0&geography=K02000001")
httr::GET("https://api.beta.ons.gov.uk/v1/datasets/cpih01/editions/time-series/versions/5/observations?time=*&aggregate=cpih1dim1A0&geography=K02000001")
library(httr)
library(jsonlite)
library(tidyverse)
library(lubridate)
library(rvest)
cpih <- GET("https://api.beta.ons.gov.uk/v1/datasets/cpih01/editions/time-series/versions/5/observations?time=*&aggregate=cpih1dim1A0&geography=K02000001") %>%
content(., "text") %>%
fromJSON() %>%
.$observations %>%
.$observation %>%
tibble(cpih = .)
cpih
httr::GET("api.ratings.food.gov.uk/Authorities", httr::add_headers('x-api-version' = 2))
?httr::add_headers
httr::GET("api.ratings.food.gov.uk/Authorities", httr::add_headers(.headers = c('x-api-version' = 2))
httr::GET("api.ratings.food.gov.uk/Authorities", httr::add_headers(.headers = c('x-api-version' = 2)))
httr::GET("api.ratings.food.gov.uk/Authorities", httr::add_headers(.headers = c('x-api-version' = "2")))
httr::GET("api.ratings.food.gov.uk/Authorities", httr::add_headers(.headers = c('x-api-version' = "2", accept = "application/json")))
httr::GET("api.ratings.food.gov.uk/Authorities", httr::add_headers(.headers = c(x-api-version = "2", accept = "application/json")))
httr::GET("api.ratings.food.gov.uk/Authorities", httr::add_headers(.headers = c('x-api-version' = "2", accept = "application/json", 'content-length' = "3131")))
httr::GET("api.ratings.food.gov.uk/Authorities", httr::add_headers(.headers = c('x-api-version' = "2", 'accept' = "application/json", 'content-length' = "3131")))
httr::GET("api.ratings.food.gov.uk/Authorities", httr::add_headers('x-api-version' = 2), httr::accept_json())
httr::GET("api.ratings.food.gov.uk/Authorities", httr::add_headers('x-api-version' = 2), httr::accept_json())
httr::GET("api.ratings.food.gov.uk/Authorities", httr::add_headers('x-api-version' = 2), httr::accept_json())
?httr::GET
mainurl <- "http://fingertips.phe.org.uk/api/"
profiles <- fromJSON(paste0(mainurl,"profiles")) %>%
filter(Name == "Health Protection")
profiles
remove(cpih)
cpih <- GET("https://api.beta.ons.gov.uk/v1/datasets/cpih01/editions/time-series/versions/5/observations?time=*&aggregate=cpih1dim1A0&geography=K02000001") %>%
content(., "text") %>%
fromJSON() %>%
.$observations %>%
.$observation %>%
tibble(cpih = .)
cpih
httr::GET("api.ratings.food.gov.uk/Authorities", httr::add_headers('x-api-version' = 2))
httr::GET("api.ratings.food.gov.uk/BusinessTypes", httr::add_headers('x-api-version' = 2))
library(httr)
library(jsonlite)
GET("api.ratings.food.gov.uk/Authorities", add_headers('x-api-version' = 2))
GET("http://httpbin.org/get")
GET("api.ratings.food.gov.uk/Authorities", add_headers('x-api-version' = 2), accept_json())
GET("https://api.ratings.food.gov.uk/Authorities", add_headers('x-api-version' = 2))
library(devtools)
check()
check(--no-build-vignettes)
?check
check(args = "--no-build-vignettes")
?build()
build(vignettes = FALSE)
install()
get_business_types()
get_authorities()
get_establishments(la = 197)
